apply plugin: 'com.android.library'


android {
  compileSdkVersion 25
  buildToolsVersion "25.0.2"

  defaultConfig {
    minSdkVersion 14
    targetSdkVersion 25
    versionCode 1
    versionName "0.1"

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      testCoverageEnabled true
    }
    debug {
      testCoverageEnabled true
    }
    repositories {
      jcenter()
      mavenCentral()
    }
  }
}

repositories {
  jcenter()
  mavenCentral()
}



dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  def slickDependencies = rootProject.ext.slickDependencies
  def slickTestDependencies = rootProject.ext.slickTestDependencies


  compile slickDependencies.appcompat
  compile slickDependencies.rxjava
  compile slickDependencies.rxandroid
  compile slickDependencies.arrow

  testCompile slickTestDependencies.junit
  testCompile slickTestDependencies.assertj
  testCompile slickTestDependencies.mockito
  androidTestCompile slickTestDependencies.mockitoAndroid
}

apply plugin: 'com.github.dcendents.android-maven'



def globalConfiguration = rootProject.extensions.getByName("ext")

version = android.defaultConfig.versionName
group = "com.github.aliabozaid.slick" // Maven Group ID for the artifact
archivesBaseName = globalConfiguration.bintrayName
install {
  repositories.mavenInstaller {
    // This generates POM.xml with proper parameters
    pom {
      project {
        packaging 'aar'

        name globalConfiguration.bintrayName
        artifactId globalConfiguration.bintrayName
        groupId "com.github.aliabozaid.slick"
        version android.defaultConfig.versionName
        //relativePath globalConfiguration.relativePath
        // description
        description globalConfiguration.libraryDescription
        url globalConfiguration.siteUrl
        inceptionYear = '2017'
        // license
        licenses {
          license {
            name globalConfiguration.licenseName
            url globalConfiguration.licenseUrl
          }
        }
        developers {
          developer {
            id globalConfiguration.developerId
            name globalConfiguration.developerName
            email globalConfiguration.developerEmail
          }
        }
        scm {
          connection globalConfiguration.gitUrl
          developerConnection globalConfiguration.gitUrl
          url globalConfiguration.siteUrl
        }

      }
    } .writeTo("$buildDir/poms/pom-default.xml").writeTo("pom.xml")
  }
}


apply plugin: 'com.jfrog.bintray'
//apply plugin: 'maven'
apply plugin: 'signing'

task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}
task javadoc(type: Javadoc) {
  description "app javadocs"
  source = android.libraryVariants["release"].javaCompile.source
  ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
  classpath =
      files(android.libraryVariants["release"].javaCompile.classpath.files) + files(ext.androidJar)
  options.links("http://docs.oracle.com/javase/7/docs/api/");
  options.links("http://d.android.com/reference/");
  exclude '**/BuildConfig.java'
  exclude '**/R.java'
}


task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}
tasks.withType(JavaCompile) { options.encoding = "UTF-8" }
artifacts {
  archives javadocJar
  archives sourcesJar
}

signing {
  required { gradle.taskGraph.hasTask("uploadArchives") }
  sign configurations.archives
}

bintray {
  user = globalConfiguration.bintrayUser
  key = globalConfiguration.bintrayKey

  configurations = ['archives']
  pkg {
    repo = globalConfiguration.bintrayRepo
    name = globalConfiguration.bintrayName
    desc = globalConfiguration.libraryDescription
    websiteUrl = globalConfiguration.siteUrl
    vcsUrl = globalConfiguration.gitUrl
    licenses = ["Apache-2.0"]
    publish = true
    publicDownloadNumbers = true
    version {
      desc = globalConfiguration.libraryDescription
      gpg {
        sign = true //Determines whether to GPG sign the files. The default is false
        passphrase = globalConfiguration.bintrayPassword
      }
    }
  }
}
apply plugin: 'android-maven'

